<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" threshold="all">

<!--
    # Rolling File Appender properties
    hbase.log.maxfilesize=256MB
    hbase.log.maxbackupindex=20
    hbase.security.log.file=SecurityAuth.audit
    hbase.security.log.maxfilesize=256MB
    hbase.security.log.maxbackupindex=20 -->

    <!-- Define some default values that can be overridden by system properties -->
    <!--
        hbase.root.logger=INFO,console
        hbase.security.logger=INFO,console
        hbase.log.dir=.
        hbase.log.file=hbase.log
        hbase.log.level=INFO
    -->
    <root>
        <level value="${hbase.root.logger:level}"/>
        <appender-ref ref="${hbase.root.logger:appender}"/>
    </root>

    <!-- Logging Threshold -->
    <!--
        log4j.threshold=ALL
    -->

    <!-- Daily Rolling File Appender -->
    <appender name="DRFA" class="org.apache.log4j.DailyRollingFileAppender">
        <!-- Rollver at midnight -->
        <param name="DatePattern" value=".yyyy-MM-dd"/>
        <!-- Rollver at midnight -->
        <!-- 
            <param name="MaxBackupIndex" value="30">
        -->
        <param name="File" value="${hbase.log.dir}/${hbase.log.file}"/>
        <!-- Pattern format: Date LogLevel LoggerName LogMessage -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{ISO8601} %-5p [%t] %c{2}: %.1000m%n"/>
        </layout>
    </appender>

    <!-- Rolling File Appender properties -->
    <!--
        hbase.log.maxfilesize=256MB
        hbase.log.maxbackupindex=20
    -->
    <!-- Rolling File Appender -->
    <appender name="RFA" class="org.apache.log4j.RollingFileAppender">
        <param name="File" value="${hbase.log.dir}/${hbase.log.file}"/>
        <param name="MaxBackupIndex" value="${hbase.log.maxbackupindex}"/>
        <param name="MaxFileSize" value="${hbase.log.maxfilesize}"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{ISO8601} %-5p [%t] %c{2}: %.1000m%n"/>
        </layout>
    </appender>

    <!-- Security audit appender -->
    <appender name="RFAS" class="org.apache.log4j.RollingFileAppender">
        <param name="File" value="${hbase.log.dir}/${hbase.security.log.file}"/>
        <param name="MaxBackupIndex" value="${hbase.security.log.maxbackupindex}"/>
        <param name="MaxFileSize" value="${hbase.security.log.maxfilesize}"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{ISO8601} %p %c: %.1000m%n"/>
        </layout>
    </appender>

    <logger name="SecurityLogger" additivity="false">
        <level value="${hbase.security.logger}"/>
        <appender-ref ref="${hbase.security.logger}">
    </logger>
    <!--
        <logger name="SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController" >
            <level value="TRACE"/>
        </logger>
        <logger name="SecurityLogger.org.apache.hadoop.hbase.security.visibility.VisibilityController" >
            <level value="TRACE"/>
        </logger>
    -->

    <!-- Null Appender -->
    <appender name="NullAppender" class="org.apache.log4j.varia.NullAppender"/>

    <!-- 
        console
        Add "console" to rootlogger above if you want to use this
    -->
    <appender name="asyncconsole" class="org.apache.hadoop.hbase.AsyncConsoleAppender">
        <param name="target" value="System.err"/>
    </appender>
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <param name="target" value="System.err"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{ISO8601} %-5p [%t] %c{2}: %.1000m%n"/>
        </layout>
    </appender>

    <!-- Custom Logging levels -->
    <logger name="org.apache.zookeeper">
        <level value="${hbase.log.level}"/>
    </logger>

    <!-- 
        <logger name="org.apache.hadoop.fs.FSNamesystem" >
            <level value="DEBUG"/>
        </logger>
    -->

    <logger name="org.apache.hadoop.hbase">
        <level value="${hbase.log.level}"/>
    </logger>

    <logger name="org.apache.hadoop.hbase.META">
        <level value="${hbase.log.level}"/>
    </logger>

    <!-- Make these two classes INFO-level. Make them DEBUG to see more zk debug. -->
    <logger name="org.apache.hadoop.hbase.zookeeper.ZKUtil">
        <level value="${hbase.log.level}"/>
    </logger>
    <logger name="org.apache.hadoop.hbase.zookeeper.ZKWatcher">
        <level value="${hbase.log.level}"/>
    </logger>

    <!-- 
        <logger name="org.apache.hadoop.dfs" >
            <level value="DEBUG"/>
        </logger>
    -->

    <!-- Set this class to log INFO only otherwise its OTT
    Enable this to get detailed connection error/retry logging. -->
    <!--
        <logger name="org.apache.hadoop.hbase.client.ConnectionImplementation" >
            <level value="TRACE"/>
        </logger>
    -->

    <!-- Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output) -->
    <!--
        <logger name="org.apache.hadoop.ipc.HBaseServer.trace" >
            <level value="DEBUG"/>
        </logger>
    -->

    <!-- Uncomment the below if you want to remove logging of client region caching' and scan of hbase:meta messages -->
    <!--
        <logger name="org.apache.hadoop.hbase.client.ConnectionImplementation" >
            <level value="INFO"/>
        </logger>
    -->

    <!--
        EventCounter
        Add "EventCounter" to rootlogger if you want to use this
        Uncomment the line below to add EventCounter information
    -->
    <!--
        <appender name="EventCounter" class="org.apache.hadoop.log.metrics.EventCounter"/>
    -->

    <!-- Prevent metrics subsystem start/stop messages (HBASE-17722) -->
    <logger name="org.apache.hadoop.metrics2.impl.MetricsConfig">
        <level value="WARN"/>
    </logger>

    <logger name="org.apache.hadoop.metrics2.impl.MetricsSinkAdapter">
        <level value="WARN"/>
    </logger>

    <logger name="org.apache.hadoop.metrics2.impl.MetricsSystemImpl">
        <level value="WARN"/>
    </logger>

</log4j:configuration>